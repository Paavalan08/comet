name: Release

on:
  push:
    branches:
      - release

jobs:
  build-and-publish:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        arch: [x64, arm64]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build Electron app
        run: |
          npm run make -- --arch=${{ matrix.arch }}
        env:
          ELECTRON_CACHE: ${{ runner.temp }}/electron
          npm_config_arch: ${{ matrix.arch }}
          npm_config_platform: ${{ matrix.os == 'macos-latest' && 'darwin' || matrix.os == 'ubuntu-latest' && 'linux' || 'win32' }}

      - name: Extract version from package.json on Linux/macOS
        if: ${{ runner.os != 'Windows' }}
        run: |
          VERSION=$(node -e "console.log(require('./package.json').version);")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Extract version from package.json on Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          $version = (Get-Content package.json | ConvertFrom-Json).version
          echo "VERSION=$version" >> $env:GITHUB_ENV
        shell: powershell

      - name: Upload files to Cloudflare R2
        run: |
          for file in $(find out/make/ -type f); do
            echo "Uploading $(basename "$file")"
            aws s3 cp "$file" "s3://${{ secrets.R2_BUCKET }}/releases/v${{ env.VERSION }}/$(basename "$file")" \
              --endpoint-url="${{ secrets.R2_ENDPOINT }}" --debug
          done
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.R2_REGION }}

  create-release:
    needs: build-and-publish
    runs-on: ubuntu-latest

    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          body: |
            Changes in this Release
          draft: true
          prerelease: false
