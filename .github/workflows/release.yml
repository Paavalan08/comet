name: Release

on:
  push:
    branches:
      - release

jobs:
  build-and-publish:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        arch: [x64, arm64]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build Electron app
        run: |
          npm run make -- --arch=${{ matrix.arch }}
        env:
          ELECTRON_CACHE: ${{ runner.temp }}/electron
          npm_config_arch: ${{ matrix.arch }}
          npm_config_platform: ${{ matrix.os }}

      - name: Extract version from package.json
        id: version
        run: |
          VERSION=$(node -e "console.log(require('./package.json').version);")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Upload each file to Cloudflare R2
        run: |
          for file in $(find out/make/ -type f); do
            echo "Uploading $(basename "$file")"
            gh api --method POST -H "Accept: application/vnd.github.v3+json" /repos/${{ github.repository }}/dispatches --input-json "{\"event_type\":\"upload_to_r2\",\"client_payload\":{\"endpoint\":\"${{ secrets.R2_ENDPOINT }}\",\"access_key_id\":\"${{ secrets.R2_ACCESS_KEY_ID }}\",\"secret_access_key\":\"${{ secrets.R2_ACCESS_SECRET_KEY }}\",\"bucket\":\"${{ secrets.R2_BUCKET }}\",\"file\":\"$file\",\"destination\":\"/releases/v${{ env.VERSION }}/$(basename "$file")\"}}"
          done
        shell: bash
